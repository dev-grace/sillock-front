[{"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\index.js":"1","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\InstitutionMain.js":"2","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\home-info\\home.js":"3","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\UserMain\\UserMain.js":"4","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\UserInfo\\index.js":"5","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Profile\\index.js":"6","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Wallet\\index.js":"7","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Certificate\\index.js":"8","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\Institute\\Issuer\\index.js":"9","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\Institute\\Verifier\\index.js":"10","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\UserInfo\\logIn.js":"11","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\UserInfo\\Join.js":"12","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\UserInfo\\signUp.js":"13","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\UserInfo\\EmailAuth.js":"14","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\UserInfo\\SignupTerms.js":"15","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\UserInfo\\InfoRegistration.js":"16","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Profile\\mySillock.js":"17","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Wallet\\loadWallet.js":"18","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Wallet\\walletMain.js":"19","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\Components\\Navbar\\Navbar.js":"20","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Wallet\\ThirdStep.js":"21","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Wallet\\SecondStep.js":"22","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Wallet\\failAccess2.js":"23","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Wallet\\completeCreation.js":"24","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Wallet\\failAccess.js":"25","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Wallet\\FirstStep.js":"26","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Wallet\\createWallet.js":"27","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Wallet\\IdentityVerification.js":"28","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Wallet\\UploadWallet.js":"29","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Certificate\\CareerInstitution.js":"30","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Certificate\\certificateMain.js":"31","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Certificate\\CareerChoice.js":"32","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Certificate\\CareerRequest.js":"33","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Certificate\\careerRegistration.js":"34","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Certificate\\myCombination.js":"35","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Certificate\\MyTypeForm.js":"36","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Certificate\\announcement.js":"37","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Certificate\\MyIssueForm.js":"38","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Certificate\\MyChoice.js":"39","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Certificate\\MyPrintForm.js":"40","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Certificate\\certificateResult2.js":"41","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Certificate\\certificateResult.js":"42","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Certificate\\announcement2.js":"43","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\Institute\\Issuer\\issureRegister.js":"44","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\Institute\\Verifier\\dashboard.js":"45","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\Components\\MiniNav.js":"46"},{"size":4112,"mtime":1607433644700,"results":"47","hashOfConfig":"48"},{"size":1917,"mtime":1607433644677,"results":"49","hashOfConfig":"48"},{"size":10320,"mtime":1607433647007,"results":"50","hashOfConfig":"48"},{"size":7934,"mtime":1607433646699,"results":"51","hashOfConfig":"48"},{"size":305,"mtime":1607433646438,"results":"52","hashOfConfig":"48"},{"size":51,"mtime":1607433645659,"results":"53","hashOfConfig":"48"},{"size":631,"mtime":1607433646124,"results":"54","hashOfConfig":"48"},{"size":851,"mtime":1607433645334,"results":"55","hashOfConfig":"48"},{"size":61,"mtime":1607433644886,"results":"56","hashOfConfig":"48"},{"size":51,"mtime":1607433644953,"results":"57","hashOfConfig":"48"},{"size":5256,"mtime":1607433646483,"results":"58","hashOfConfig":"48"},{"size":2275,"mtime":1607433646364,"results":"59","hashOfConfig":"48"},{"size":1631,"mtime":1607433646563,"results":"60","hashOfConfig":"48"},{"size":4066,"mtime":1607433646320,"results":"61","hashOfConfig":"48"},{"size":10222,"mtime":1607433646399,"results":"62","hashOfConfig":"48"},{"size":6638,"mtime":1607433646340,"results":"63","hashOfConfig":"48"},{"size":6728,"mtime":1607598671792,"results":"64","hashOfConfig":"48"},{"size":2613,"mtime":1607433646196,"results":"65","hashOfConfig":"48"},{"size":1992,"mtime":1607433646263,"results":"66","hashOfConfig":"48"},{"size":1448,"mtime":1607433644858,"results":"67","hashOfConfig":"48"},{"size":1441,"mtime":1607433645948,"results":"68","hashOfConfig":"48"},{"size":1928,"mtime":1607433645919,"results":"69","hashOfConfig":"48"},{"size":1133,"mtime":1607433646098,"results":"70","hashOfConfig":"48"},{"size":818,"mtime":1607433646009,"results":"71","hashOfConfig":"48"},{"size":1136,"mtime":1607433646077,"results":"72","hashOfConfig":"48"},{"size":9473,"mtime":1607435416722,"results":"73","hashOfConfig":"48"},{"size":2721,"mtime":1607433646032,"results":"74","hashOfConfig":"48"},{"size":6631,"mtime":1607433645898,"results":"75","hashOfConfig":"48"},{"size":3467,"mtime":1607433645985,"results":"76","hashOfConfig":"48"},{"size":6271,"mtime":1607435920182,"results":"77","hashOfConfig":"48"},{"size":1327,"mtime":1607435883658,"results":"78","hashOfConfig":"48"},{"size":2241,"mtime":1607436731016,"results":"79","hashOfConfig":"48"},{"size":3790,"mtime":1607794754961,"results":"80","hashOfConfig":"48"},{"size":395,"mtime":1607433645182,"results":"81","hashOfConfig":"48"},{"size":380,"mtime":1607433645354,"results":"82","hashOfConfig":"48"},{"size":1793,"mtime":1607433645103,"results":"83","hashOfConfig":"48"},{"size":1111,"mtime":1607433645146,"results":"84","hashOfConfig":"48"},{"size":1805,"mtime":1607433645063,"results":"85","hashOfConfig":"48"},{"size":2477,"mtime":1607433645038,"results":"86","hashOfConfig":"48"},{"size":1788,"mtime":1607433645081,"results":"87","hashOfConfig":"48"},{"size":2071,"mtime":1607433645307,"results":"88","hashOfConfig":"48"},{"size":827,"mtime":1607433645289,"results":"89","hashOfConfig":"48"},{"size":1122,"mtime":1607433645163,"results":"90","hashOfConfig":"48"},{"size":292,"mtime":1607433644909,"results":"91","hashOfConfig":"48"},{"size":274,"mtime":1607433644934,"results":"92","hashOfConfig":"48"},{"size":1981,"mtime":1607434369864,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"156mj6x",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"96"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"96"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"96"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"96"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"96"},"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\index.js",[],["193","194"],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\InstitutionMain.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\home-info\\home.js",["195"],"import React, { Component } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Nav, Navbar, Form } from 'react-bootstrap';\nimport Button from '@material-ui/core/Button';\n\nimport \"./css/index.css\";\nimport \"./css/text-draw.css\";\n\nimport Slider from \"react-slick\";\nimport \"./css/slick.css\";\nimport \"./css/slick-theme.css\";\n\nimport phoneimg from \"./svg/phone.svg\";\n\nclass Home extends Component {\n    goBack = () => {\n        this.props.history.goBack();\n    }\n    render() {\n        const settings = {\n            dots: false,\n            infinite: true,\n            speed: 1000,\n            slidesToShow: 1,\n            slidesToScroll: 1,\n            autoplay: true,\n            autoplaySpeed: 3000,\n        };\n        return (\n            <div className=\"hi-body\">\n                <Navbar bg=\"light\" variant=\"light\">\n                    <Navbar.Brand href=\"/\">Sillock</Navbar.Brand>\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link href=\"/\">홈</Nav.Link>\n                        <Nav.Link href=\"/user/profile/mysillock\">내 지갑</Nav.Link>\n                    </Nav>\n                    <Form inline>\n                        <Button variant=\"outline-primary\" onClick={(e) => { this.goBack() }}>뒤로가기 </Button>\n                    </Form>\n                </Navbar>\n\n                <div className=\"wave-container\">\n                    <svg id=\"wave-area\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\n                        <path fill=\"#9733ee\" fill-opacity=\"1\"\n                            d=\"M0,128L48,154.7C96,181,192,235,288,256C384,277,480,267,576,234.7C672,203,768,149,864,133.3C960,117,1056,139,1152,144C1248,149,1344,139,1392,133.3L1440,128L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\">\n                        </path>\n                    </svg>\n                </div>\n\n                <div class=\"row h-100\">\n                    <div class=\"col-sm-12 my-auto\">\n                        <div className=\"container-fluid hi-container-fluid\">\n                            {/* Content here */}\n                            <div>\n                                <Slider {...settings} className=\"text-center\">\n                                    <div>\n                                        <svg id=\"logo\" className=\"text-center pt-3\" width=\"450\" height=\"109\" viewBox=\"0 0 552 109\" fill=\"none\"\n                                            xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path\n                                                d=\"M37.704 105.672C31.08 105.672 25.128 104.52 19.848 102.216C14.664 99.816 10.584 96.552 7.608 92.424C4.632 88.2 3.096 83.352 3 77.88H16.968C17.448 82.584 19.368 86.568 22.728 89.832C26.184 93 31.176 94.584 37.704 94.584C43.944 94.584 48.84 93.048 52.392 89.976C56.04 86.808 57.864 82.776 57.864 77.88C57.864 74.04 56.808 70.92 54.696 68.52C52.584 66.12 49.944 64.296 46.776 63.048C43.608 61.8 39.336 60.456 33.96 59.016C27.336 57.288 22.008 55.56 17.976 53.832C14.04 52.104 10.632 49.416 7.752 45.768C4.968 42.024 3.576 37.032 3.576 30.792C3.576 25.32 4.968 20.472 7.752 16.248C10.536 12.024 14.424 8.76 19.416 6.456C24.504 4.152 30.312 3 36.84 3C46.248 3 53.928 5.352 59.88 10.056C65.928 14.76 69.336 21 70.104 28.776H55.704C55.224 24.936 53.208 21.576 49.656 18.696C46.104 15.72 41.4 14.232 35.544 14.232C30.072 14.232 25.608 15.672 22.152 18.552C18.696 21.336 16.968 25.272 16.968 30.36C16.968 34.008 17.976 36.984 19.992 39.288C22.104 41.592 24.648 43.368 27.624 44.616C30.696 45.768 34.968 47.112 40.44 48.648C47.064 50.472 52.392 52.296 56.424 54.12C60.456 55.848 63.912 58.584 66.792 62.328C69.672 65.976 71.112 70.968 71.112 77.304C71.112 82.2 69.816 86.808 67.224 91.128C64.632 95.448 60.792 98.952 55.704 101.64C50.616 104.328 44.616 105.672 37.704 105.672Z\"\n                                                stroke=\"#9733ee\" stroke-width=\"5\" />\n                                            <path d=\"M103.5 4.296V104.664H90.3956V4.296H103.5Z\" stroke=\"#9733ee\" stroke-width=\"5\" />\n                                            <path d=\"M138.937 94.008H174.073V104.664H125.833V4.296H138.937V94.008Z\" stroke=\"#9733ee\"\n                                                stroke-width=\"5\" />\n                                            <path d=\"M201.093 94.008H236.229V104.664H187.989V4.296H201.093V94.008Z\" stroke=\"#9733ee\"\n                                                stroke-width=\"5\" />\n                                            <path\n                                                d=\"M295.65 105.672C286.338 105.672 277.842 103.512 270.162 99.192C262.482 94.776 256.386 88.68 251.874 80.904C247.458 73.032 245.25 64.2 245.25 54.408C245.25 44.616 247.458 35.832 251.874 28.056C256.386 20.184 262.482 14.088 270.162 9.768C277.842 5.352 286.338 3.144 295.65 3.144C305.058 3.144 313.602 5.352 321.282 9.768C328.962 14.088 335.01 20.136 339.426 27.912C343.842 35.688 346.05 44.52 346.05 54.408C346.05 64.296 343.842 73.128 339.426 80.904C335.01 88.68 328.962 94.776 321.282 99.192C313.602 103.512 305.058 105.672 295.65 105.672ZM295.65 94.296C302.658 94.296 308.946 92.664 314.514 89.4C320.178 86.136 324.594 81.48 327.762 75.432C331.026 69.384 332.658 62.376 332.658 54.408C332.658 46.344 331.026 39.336 327.762 33.384C324.594 27.336 320.226 22.68 314.658 19.416C309.09 16.152 302.754 14.52 295.65 14.52C288.546 14.52 282.21 16.152 276.642 19.416C271.074 22.68 266.658 27.336 263.394 33.384C260.226 39.336 258.642 46.344 258.642 54.408C258.642 62.376 260.226 69.384 263.394 75.432C266.658 81.48 271.074 86.136 276.642 89.4C282.306 92.664 288.642 94.296 295.65 94.296Z\"\n                                                stroke=\"#9733ee\" stroke-width=\"5\" />\n                                            <path\n                                                d=\"M358.453 54.408C358.453 44.616 360.661 35.832 365.077 28.056C369.493 20.184 375.493 14.04 383.077 9.624C390.757 5.208 399.253 3 408.565 3C419.509 3 429.061 5.64 437.221 10.92C445.381 16.2 451.333 23.688 455.077 33.384H439.381C436.597 27.336 432.565 22.68 427.285 19.416C422.101 16.152 415.861 14.52 408.565 14.52C401.557 14.52 395.269 16.152 389.701 19.416C384.133 22.68 379.765 27.336 376.597 33.384C373.429 39.336 371.845 46.344 371.845 54.408C371.845 62.376 373.429 69.384 376.597 75.432C379.765 81.384 384.133 85.992 389.701 89.256C395.269 92.52 401.557 94.152 408.565 94.152C415.861 94.152 422.101 92.568 427.285 89.4C432.565 86.136 436.597 81.48 439.381 75.432H455.077C451.333 85.032 445.381 92.472 437.221 97.752C429.061 102.936 419.509 105.528 408.565 105.528C399.253 105.528 390.757 103.368 383.077 99.048C375.493 94.632 369.493 88.536 365.077 80.76C360.661 72.984 358.453 64.2 358.453 54.408Z\"\n                                                stroke=\"#9733ee\" stroke-width=\"5\" />\n                                            <path\n                                                d=\"M529.015 104.664L487.687 58.872V104.664H474.583V4.296H487.687V50.808L529.159 4.296H545.719L500.215 54.552L546.151 104.664H529.015Z\"\n                                                stroke=\"#9733ee\" stroke-width=\"5\" />\n                                        </svg>\n                                    </div>\n                                    <div>\n                                        <div class=\"card-body\">\n                                            <h1 class=\"card-title\">실록이란?</h1>\n                                            <h3 class=\"card-text\">사실을 있는 그대로 적은 기록이라는 뜻을 가진<br></br>블록체인 기반 자기주권이력증명서비스 플랫폼입니다.</h3>\n                                        </div>\n                                    </div>\n                                    <div>\n                                        {/* img */}\n                                        <div class=\"card-body\">\n                                            <h1>WHY 실록?</h1>\n                                            <h3>실록은 블록체인 기반으로 설계되어 있어,<br></br>보다 안전하고 신뢰성 있는 서비스를 제공합니다.</h3>\n                                        </div>\n                                    </div>\n                                    <div>\n                                        {/* img */}\n                                        <div class=\"card-body text-center\">\n                                            <h2>손쉬운 이력 증명이 가능하도록,<br></br>실록이 함께 하겠습니다.</h2>\n                                        </div>\n                                    </div>\n                                    <div>\n                                        <div class=\"card-body text-center\">\n                                            <h2>나만의 증명 지갑을 통한 간편한 이력 관리</h2>\n                                            <h5>'my 실록 지갑'  서비스를 통해 여러 인증 기관의<br></br> 이력들을 한 눈에 확인하실 수 있습니다.</h5>\n                                        </div>\n                                    </div>\n                                    <div>\n                                        <div class=\"card-body text-center\">\n                                            <h2>증명서의 개인 정보 공개 범위 설정이 가능</h2>\n                                            <h5>나만의 증명서 조합하기' 기능을 이용해<br></br>인증서 내의 공개 정보 범위를 선택하실 수 있습니다!</h5>\n                                        </div>\n                                    </div>\n                                    <div>\n                                        <div class=\"card-body text-center\">\n                                            <h2>자격 이력 검증 자동화 시스템 지원</h2>\n                                        </div>\n                                    </div>\n                                </Slider>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <footer className=\"footer shadow-lg\">\n                    <strong>@ 2020</strong>\n                </footer>\n            </div>\n        );\n    }\n}\n\nexport default Home;","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\UserMain\\UserMain.js",["196","197"],"import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\n//import { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport BannerImg from \"./img/sillock-logo-none-bg.png\";\n\nimport \"./css/index.css\";\nimport \"./css/wave.css\";\nimport \"./css/background.css\";\n\nimport {\n  Navbar,\n  Nav,\n  Container,\n  Row,\n  Col,\n} from 'react-bootstrap';\n\nimport * as ReactBootstrap from 'react-bootstrap';\n\nconst banner = {\n  color: \"#8a2be2\",\n  fontSize: \"1.25rem\",\n  fontWeight: \"bold\"\n}\n\nconst navContent = {\n  color: \"black\",\n  fontSize: \"1rem\",\n  fontWeight: \"bold\",\n  paddingRight: \"30px\"\n}\n\nconst buttonStyle1 = {\n  fontSize: \"1.75rem\",\n  background: 'linear-gradient(20deg, rgba(220,0,230,50%) 30%, rgba(180,0,185,70%) 90%)',\n  borderRadius: 3,\n  width: \"100%\",\n  border: 0,\n  color: 'white',\n  height: \"20vw\",\n  boxShadow: '0 3px 5px 2px rgba(204, 204, 255, .3)',\n}\n\nconst buttonStyle2 = {\n  fontSize: \"1.75rem\",\n  background: 'linear-gradient(10deg, rgba(102,102,255,50%) 30%, rgba(102,180,255,70%) 90%)',\n  borderRadius: 3,\n  border: 0,\n  width: \"100%\",\n  color: 'white',\n  height: \"20vw\",\n  boxShadow: '0 3px 5px 2px rgba(204, 204, 255, .3)',\n}\n\nfunction UserLogIn() {//로그아웃된 상태일때  \n  return <ReactBootstrap.Button href=\"/userinfo/login\" variant=\"light\" className=\"btn btn-light font-weight-bold\">로그인</ReactBootstrap.Button>;\n}\n\nfunction UserLogOut() { //로그인된 상태일때 \n  return <ReactBootstrap.Button onClick={function () { UserLogOut2(); }} variant=\"light\" className=\"btn btn-light font-weight-bold\" id=\"logout\" >로그아웃</ReactBootstrap.Button>;\n}\n\n\nfunction UserLogOut2() {\n  console.log(\"토큰삭제\")\n  localStorage.removeItem('jwt');\n  console.log(\"토큰삭제 완료\");\n  Getjwt();\n  //localStorage에 기록되는데 시작이 좀 걸리는 듯해서 0.5초 뒤 새로고침 한번 함.\n  setTimeout(function () {\n    console.log(\"토큰삭제 완료\");\n    window.location.href = window.location.href;\n  }, 700);\n\n  // this.props.history.push(\"/\");\n}\n\n\nfunction Getjwt() {\n  var ret;\n  var status;\n  axios.get('http://35.232.159.201:3000/api/auth/check', {\n    headers: {\n      'x-access-token': localStorage.getItem('jwt')\n    }\n  })\n    .then(function (response) {\n      ret = response;\n      status = ret.status;\n      console.log(\"전송결과 : \" + ret.statusText);\n      // console.log(status);\n      localStorage.setItem('status', status);\n    })\n    .catch(function (error) {\n      ret = error.response;\n      // console.log(ret);\n      status = ret.status;\n      localStorage.setItem('status', status);\n    });\n}\n\n\nfunction UserLogInOut() { //check api에 몰어봐서 200이면 로그인된 상태-> 다른 링크 접근가능\n  var isLoggedIn; // check한 토큰 유효하면 로그인유지\n  var status;\n\n  status = localStorage.getItem('status');\n  //현재 axios밖의 status에는 할당이 안됨.\n  // console.log(\"status: \"+status);\n\n  if (status !== \"200\") isLoggedIn = false; //토큰이 없으면\n  else isLoggedIn = true;\n  // console.log(\"status2: \"+status);\n  return isLoggedIn;\n}\n\nfunction load() {\n  var isLoggedIn = UserLogInOut();\n  console.log(\"isLoggedIn 결과 : \" + isLoggedIn);\n  if (isLoggedIn) return <UserLogOut />;\n  return <UserLogIn />;\n}\n\nfunction loginMessage() {\n  alert('로그인이 필요합니다');\n}\n\nclass UserMain extends Component {\n  render() {\n    return (\n      <div className=\"um-body\">\n        <div>\n          <ul class=\"background\">\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n          </ul>\n        </div>\n\n        <svg className=\"waves\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n          viewBox=\"0 24 150 28\" preserveAspectRatio=\"none\" shape-rendering=\"auto\">\n          <defs>\n            <path id=\"gentle-wave\" d=\"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z\" />\n          </defs>\n          <g className=\"parallax\">\n            <use xlinkHref=\"#gentle-wave\" x=\"48\" y=\"0\" fill=\"rgba(255,255,255,0.7\" />\n            <use xlinkHref=\"#gentle-wave\" x=\"48\" y=\"3\" fill=\"rgba(255,255,255,0.5)\" />\n            <use xlinkHref=\"#gentle-wave\" x=\"48\" y=\"5\" fill=\"rgba(255,255,255,0.3)\" />\n            <use xlinkHref=\"#gentle-wave\" x=\"48\" y=\"7\" fill=\"#fff\" />\n          </g>\n        </svg>\n\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" className=\"fixed-top\">\n          <Navbar.Brand href=\"#home\">\n            <img className=\"banner-img align-middle\" src={BannerImg} width=\"30\" height=\"30\" alt=\"\" loading=\"lazy\" alt=\"Banner-img\" />\n            <span style={banner}>Sillock</span>\n          </Navbar.Brand>\n\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\"></Nav>\n            <Nav>\n              <Nav.Link href=\"/home\" style={navContent}>실록소개</Nav.Link>\n              <Nav.Link href=\"#\" style={navContent}>실록안내</Nav.Link>\n              <Nav.Link href=\"/institutionMain\" style={navContent}>기업/기관</Nav.Link>\n              {UserLogInOut() ? <Nav.Link href=\"/user/profile/mysillock\" style={navContent}>내 지갑</Nav.Link>\n                : <Nav.Link onClick={function () { loginMessage() }} style={navContent}>내 지갑</Nav.Link>}\n              {load()}\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n\n        <div class=\"container-fluid um-container-fluid\">\n          <div class=\"um-content\">\n            <div>\n              <Container className=\"h-100\">\n                <Row className=\"align-items-center h-100\">\n                  <Col xs={12} md={4}>\n                    <h2 className=\"info2\">Sillock</h2>\n                    <h5 >사실을 있는 그대로 적은 기록</h5>\n                    <h5>그리고 블록체인</h5>\n                  </Col>\n                  <Col xs={12} md={8} className=\"w-100 text-center\">\n                    <Row>\n                      <Col xs={12} md={6} className=\"box\">\n                        {UserLogInOut() ? <Button href=\"/wallet/walletMain\" style={buttonStyle1} className=\"mb-4\">지갑생성하기</Button>\n                          : <Button onClick={function () { loginMessage() }} style={buttonStyle1} className=\"mb-4\">지갑생성하기</Button>}\n                      </Col>\n\n                      <Col xs={12} md={6} className=\"box\">\n                        {UserLogInOut() ? <Button href=\"/certificateMain\" style={buttonStyle2}>내 증명서 만들기</Button>\n                          : <Button onClick={function () { loginMessage() }} style={buttonStyle2}>내 증명서 만들기</Button>}\n                      </Col>\n                    </Row>\n                  </Col>\n                </Row>\n              </Container>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default UserMain;","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\UserInfo\\index.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Profile\\index.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Wallet\\index.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Certificate\\index.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\Institute\\Issuer\\index.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\Institute\\Verifier\\index.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\UserInfo\\logIn.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\UserInfo\\Join.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\UserInfo\\signUp.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\UserInfo\\EmailAuth.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\UserInfo\\SignupTerms.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\UserInfo\\InfoRegistration.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Profile\\mySillock.js",["198"],"import React, { Component } from 'react';\nimport './mySillock.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport profileIMG from '../Profile/profile.png';\n\nimport { Document, Page } from 'react-pdf';\n\n//import Masonry from 'react-masonry-css'\nimport Masonry from 'react-masonry-component';\n\n\nconst masonryOptions = {\n    transitionDuration: 0\n};\n\nconst imagesLoadedOptions = {\n    itemSelector: '.grid-item',\n    columnWidth: '.grid-sizer',\n    percentPosition: true,\n}\n\nclass Mysillock extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            elements: [\n                { src: \"https://media.istockphoto.com/vectors/certificate-or-diploma-retro-design-vector-id844521618\" },\n                { src: \"https://image.freepik.com/free-vector/certificate-or-diploma-retro-design-template_12454-7689.jpg\" },\n                { src: \"https://media.istockphoto.com/vectors/certificate-or-diploma-retro-design-template-vector-illustration-vector-id1129335621\" },\n                { src: \"https://swlabs.hanyang.ac.kr/theme/oklassedu/pix/images/certificate.png\" },\n                { src: \"https://i.pinimg.com/originals/dc/66/32/dc6632750ce10dcf480b3e4fa1ef16ad.jpg\" },\n                { src: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQBR7u-fkfo54TMvVA3o_zVQm3nqRz6JWs1nA&usqp=CAU\" },\n            ]\n        }\n    }\n\n    state = {\n        numPages: null,\n        pageNumber: 1,\n    }\n     \n    onDocumentLoadSuccess = ({ numPages }) => {\n        this.setState({ numPages });\n    }\n\n    render() {\n        const { pageNumber, numPages } = this.state;\n        const childElements = this.state.elements.map(function (element, index) {\n            return (\n                <div key={index} className='grid-item'>\n                    <Document\n                    file=\"somefile.pdf\"\n                    onLoadSuccess={this.onDocumentLoadSuccess}>\n                    <Page pageNumber={pageNumber} />\n                    </Document>\n                    <img src={element.src} alt=\"img\" />\n                    <div className=\"docs-info\">\n                        <p className=\"text-muted\">한국정보기술연구원\n                        만료 <span>2021/01/01</span></p>\n                    </div>\n                </div>\n            );\n        });\n\n        return (\n            <div>\n                {/* <!-- Navbar -->\n                <nav nav className=\"navbar navbar-expand-lg navbar-light bg-light\" >\n                </nav> */}\n                {/* <!-- Content Title --> */}\n                <div className=\"content-title text-center\" id=\"nav1\">\n                    <a className=\"navbar-brand\" href=\"/\"><strong>Sillock</strong></a>\n                    <h2>내 실록지갑</h2>\n                </div>\n                {/* <!-- Contents --> */}\n                <div div className=\"container-fulid contents text-center \" >\n                    <img src={profileIMG} alt='Profile 150x150' className='rounded-circle' />\n\n                    <div className=\"user-info\">\n                        <h5 className=\"mt-1\">Name</h5>\n                        <p className=\"text-muted\">example@gmail.com</p>\n                        <div className=\"docs-status text-center\">\n                            <span className=\"active-docs text-muted\"><span className=\"dot\"></span> 활성인증서 <span\n                                className=\"active-docs-num\">7</span></span>\n                            <span className=\"expire-docs text-muted\"><span className=\"dot\"></span> 만료인증서 <span\n                                className=\"expire-docs-num\">3</span></span>\n                        </div>\n                        <div className=\"wallet-info mt-3 ml-5\">\n                            지갑 번호 : 5D3CA007DFE0BCFC67243DF5E50FB4501BA08CAEFCD788536B8DBF0B4EB15D7A\n                        </div>\n                    </div>\n                    <div className=\"btn-group row mx-auto w-100 text-center mt-2\">\n                        <div className=\"col-sm-3\"></div>\n                        <div className=\"col-sm-6\">\n                            <button className=\"btn btn-sm rounded controll-btn\">증명서 발급하기</button>\n                            <button className=\"btn btn-sm rounded controll-btn\">내 등록 이력</button>\n                            <button className=\"btn btn-sm rounded controll-btn\">프로필 편집</button>\n                        </div>\n                        <div className=\"col-sm-3\"></div>\n                    </div>\n\n                    <div className=\"row mx-auto w-100 h-100 text-center mt-4 mb-3 contents-docs\">\n                        <div className=\"col-md-6\">\n                            <h5><strong>활성 인증서</strong></h5>\n                            <hr className=\"line-div\" />\n                            <div className=\"row mx-auto d-block docs-items\">\n                                <Masonry\n                                    className={'grid'} // default ''\n                                    elementType={'div'} // default 'div'\n                                    options={masonryOptions} // default {}\n                                    imagesLoadedOptions={imagesLoadedOptions}\n                                    disableImagesLoaded={false} // default false\n                                    updateOnEachImageLoad={false} // default false and works only if disableImagesLoaded is false\n                                >\n\n                                    {childElements}\n                                </Masonry>\n                            </div>\n                        </div>\n\n                        <div className=\"col-md-6\">\n                            <h5><strong>만료 인증서</strong></h5>\n                            <hr className=\"line-div line-div-expire\" />\n\n                            <div className=\"row mx-auto d-block docs-items\">\n                                <Masonry\n                                    className={'grid'} // default ''\n                                    elementType={'div'} // default 'div'\n                                    options={masonryOptions} // default {}\n                                    imagesLoadedOptions={imagesLoadedOptions}\n                                    disableImagesLoaded={false} // default false\n                                    updateOnEachImageLoad={false} // default false and works only if disableImagesLoaded is false\n                                >\n\n                                    {childElements}\n                                </Masonry>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div >\n        );\n    }\n}\n\nexport default Mysillock;","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Wallet\\loadWallet.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Wallet\\walletMain.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\Components\\Navbar\\Navbar.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Wallet\\ThirdStep.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Wallet\\SecondStep.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Wallet\\failAccess2.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Wallet\\completeCreation.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Wallet\\failAccess.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Wallet\\FirstStep.js",["199","200","201"],"import React, { Component } from 'react';\n// import { Link } from 'react-router-dom';\nimport \"./wallet.css\";\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { JSEncrypt } from 'jsencrypt';\nimport MiniNav from \"../../Components/MiniNav.js\"\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Nav, Navbar, Form } from 'react-bootstrap';\n\nclass FirstStep extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: \"아직 응답이 없습니다\",\n            pwd1: 0,\n            pwd2: 1,\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.e_comparePwd = this.e_comparePwd.bind(this);\n    }\n\n    handleChange(e) {\n        const target = e.target;\n        //console.log(\"target : \"+target);\n        const value = target.value;\n        //console.log(\"target.value : \"+value);\n        const name = target.name;\n        //console.log(\"target.name : \"+name);\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    e_comparePwd() {\n        if (this.state.pwd1 !== this.state.pwd2) {\n            //console.log(\"비밀번호 불일치\");\n            return false\n        } else {\n            //console.log(\"비밀번호가 일치\");\n            localStorage.setItem('walletPwd', this.state.pwd1);\n            return true;\n        }\n    }\n\n    onClickBtn() {\n        var ret;\n        const compare = this.e_comparePwd();\n        if (compare === true) {\n\n            axios.get('http://35.232.159.201:3000/api/wallet/make', {\n                headers: {\n                    'x-access-token': localStorage.getItem('jwt')\n                }\n            })\n                .then((response) => {\n                    ret = response.data;\n                    console.log(ret);\n                    this.Createkey();\n                    window.location.replace(\"/wallet/SecondStep\");\n                })\n                .catch((error) => {\n                    ret = error.response;\n                    console.log(ret);\n                    ret = ret.data;\n                    console.log(ret);\n                    console.log(ret.msg);\n                    this.Createkey();\n                    alert(\"이미 지갑이 존재합니다.\");\n                    //window.location.replace(\"/wallet/walletMain\");\n\n                });\n            this.Getjwt();\n            //this.setState({ message: ret});\n        }\n        else { //아니면\n            alert(\"입력된 두 비밀번호가 다릅니다. 다시 확인해주세요\");\n        }\n    }\n\n    /* 절대경로 x\n    https://nodejs.org/api/fs.html#fs_fs_writefile_file_data_options_callback\n    fs.writeFile(file, data[, options], callback)\n    fs.writeFile()파일 설명자와 함께 사용\n    \n    import { useLocation } from 'react-router-dom'\n\n    function HeaderView() {\n        const location = useLocation();\n        console.log(location.pathname);\n        return <span>Path : {location.pathname}</span>\n    }\n    */\n\n    Walletinfo() {\n        var ret;\n        axios.get('http://35.232.159.201:3000/api/wallet/status', {\n            headers: {\n                'x-access-token': localStorage.getItem('jwt')\n            }\n        })\n            .then((response) => {\n                ret = response.data;\n                console.log(ret);\n                localStorage.setItem('walletinfo', ret);\n            })\n            .catch((error) => {\n                ret = error.response;\n                console.log(ret);\n                ret = ret.data;\n                console.log(ret);\n                console.log(ret.msg);\n                console.log('지갑정보 로드 실패');\n            });\n        this.Getjwt();\n        //this.setState({ message: ret});\n    }\n\n    Createkey() {\n        var ret;\n        var crypt = new JSEncrypt({\n            default_key_size: 2048\n        });\n        var prikey = crypt.getPrivateKey();\n        var pubkey = crypt.getPublicKey();\n        console.log(crypt.getPrivateKey());\n        console.log(crypt.getPublicKey());\n\n        const fs = window.require('fs');\n        //const path = window.require('path')\n\n\n        const wallet = {\n            a: localStorage.getItem('walletPwd'),\n            b: localStorage.getItem('walletinfo'),\n            publickey: pubkey\n        }\n        console.log('walletinfo:' + localStorage.getItem('walletinfo'));\n        fs.writeFile(`src/User/static/privateKey.pem${__dirname}`, prikey, function (err) {\n            if (err) throw err;\n            console.log('키 파일 생성 완료!');\n        });\n        fs.writeFile(`src/User/static/walletinfo.json${__dirname}`, JSON.stringify(wallet), function (err) {\n            if (err) throw err;\n            console.log('지갑 백업 파일 생성!');\n        });\n        this.Walletinfo();\n        axios.post('http://35.232.159.201:3000/api/wallet/pubkey', {\n            'publicKey': pubkey\n        }, {\n            headers: {\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('jwt')\n            }\n        })\n            .then((response) => {\n                ret = response.data;\n                console.log(ret);\n                console.log(ret.message);\n                console.log(\"공개키 등록 성공\");\n\n            })\n            .catch((error) => {\n                ret = error.response;\n                console.log(ret);\n                alert(\"키 등록을 실패하였습니다.\");\n            });\n    }\n\n    Getjwt() {\n        var ret;\n        var status;\n        axios.get('http://35.232.159.201:3000/api/auth/check', {\n            headers: {\n                'x-access-token': localStorage.getItem('jwt')\n            }\n        })\n            .then(function (response) {\n                ret = response;\n                status = ret.status;\n                console.log(\"전송결과 : \" + ret.statusText);\n                // console.log(status);\n                localStorage.setItem('status', status);\n\n            })\n            .catch(function (error) {\n                ret = error.response;\n                // console.log(ret);\n                status = ret.status;\n                localStorage.setItem('status', status);\n            });\n    }\n\n    goBack = () => {\n        this.props.history.goBack();\n    }\n\n    render() {\n        return (\n            <div className=\"Wallet\">\n                <MiniNav />\n                <div className=\"header1\">\n                    <p className=\"header2\">STEP 1. 정보입력</p>\n                </div>\n                <div className=\"Step\">\n                    <p className=\"w-title\">Step 1</p>\n                    <hr className=\"line\"></hr>\n                    <h2 className=\"w-txt\">정보입력</h2>\n                </div>\n                <div className=\"Contents\">\n                    <div className=\"contentsName\">\n                        <p className=\"w-title2\">새 지갑 만들기</p>\n                    </div>\n                    <div className=\"contents\">\n                        <div className=\"conlayout\">\n                            <form>\n                                {/* <div className=\"layout2\">\n                                    <p className=\"w-txt3\">지갑 이름</p>\n                                    <TextField\n                                    id=\"w-input\"\n                                    label=\"지갑 이름 입력\"\n                                    type=\"walletName\"\n                                    variant=\"outlined\"\n                                    />\n                                </div> */}\n                                <div className=\"layout2\">\n                                    <p className=\"w-txt3\">지갑 비밀번호</p>\n                                    <TextField\n                                        id=\"w-input\"\n                                        name=\"pwd1\"\n                                        label=\" 영문,숫자,특수문자 혼용 8자 이상\"\n                                        type=\"walletPassword\"\n                                        variant=\"outlined\"\n                                        onChange={this.handleChange}\n                                    />\n                                </div>\n                                <div className=\"layout2\">\n                                    <p className=\"w-txt3\">비밀번호 재입력</p>\n                                    <TextField\n                                        id=\"w-input\"\n                                        name=\"pwd2\"\n                                        label=\"비밀번호 재확인\"\n                                        type=\"passwordCheck\"\n                                        variant=\"outlined\"\n                                        onChange={this.handleChange}\n                                    />\n                                </div>\n                            </form>\n                        </div>\n                        <div className=\"stepButton\">\n                            <form>\n                                <Button id=\"subbtn\" variant=\"contained\" className=\"Confirmation\" onClick={(e) => { this.onClickBtn() }}>확인</Button>\n                                {/*-- 서버에서 온 값 : \"{this.state.message}\"*/}\n                            </form>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FirstStep;","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Wallet\\createWallet.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Wallet\\IdentityVerification.js",["202"],"import React, { Component } from 'react';\n// import { Link } from 'react-router-dom';\nimport \"./wallet.css\";\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nclass IdentityVerification extends Component {\n    /*if 문 추가-> 인증 실패시 fail 컴포넌트 */\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: \"아직 응답이 없습니다\",\n            userId: \"\",\n            password: \"\",\n            email: \"\"\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        const target = e.target;\n        console.log(\"target : \" + target);\n        const value = target.value;\n        console.log(\"target.value : \" + value);\n        const name = target.name;\n        console.log(\"target.name : \" + name);\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    async onClickBtn() {\n        var ret;\n        //if 이메일 최초 인증 된 유저인지 확인 작업\n        await axios.post('http://35.232.159.201:3000/api/auth/verify',\n            {\n                \"userId\": this.state.userId,\n                \"password\": this.state.password,\n                \"email\": this.state.email\n            })\n            .then(function (response) {\n                ret = response.data;\n                //console.log(\"ret.message : \"+ret.msg);\n                //console.log(\"ret : \"+ret);\n                alert(\"이메일이 전송되었습니다. 링크를 확인해주세요\");\n                window.location.replace(\"/userinfo/join\");   //이메일 확인 절차 x\n            })\n            .catch(function (error) {\n                ret = error.response;\n                ret = ret.data;\n                //console.log(ret);\n                //console.log(\"error ret : \"+ret.msg);\n                alert(\"올바른 입력인지 확인해주세요.\");\n                //에러 페이지 세분화\n            });\n        //this.GetEmail(); //이메일 인증 확인\n        //this.setState({ message: ret.msg});\n    }\n\n    //** get email함수 수정 필요\n    GetEmail() {\n        var ret;\n        var status;\n        axios.get(\"http://35.232.159.201:3000​/api/auth/verify/${token}\",\n            {\n                'token': localStorage.getItem('token')\n            })\n            .then(function (response) {\n                ret = response;\n                status = ret.status;\n                console.log(\"전송결과 : \" + ret.statusText);\n                console.log(status);\n                localStorage.setItem('status', status);\n\n            })\n            .catch(function (error) {\n                ret = error.response;\n                console.log(ret);\n                status = ret.status;\n                localStorage.setItem('status', status);\n            })\n            .then(function (response) {\n                if (localStorage.getItem('status') === '200') {\n                    console.log(\"인증 성공\");\n                    //window.location.replace(\"/wallet/FirstStep\");\n                    // this.props.history.push(\"/wallet/FirstStep\");\n                }\n            });\n        //this.setState({ message: ret.msg});\n    }\n\n    render() {\n        return (\n            <div className=\"Wallet\">\n                <div className=\"header1\">\n                    <p className=\"header2\">SILLOCK</p>\n                </div>\n                <div className=\"Step\">\n                    <p className=\"w-title\">본인인증</p>\n                    <hr className=\"line\"></hr>\n                    <p className=\"w-txt\">이메일 주소를 입력해 주세요</p>\n                </div>\n                <div className=\"Contents\">\n                    <div className=\"contentsName\">\n                        <p className=\"w-title2\">이메일 본인인증</p>\n                        <p className=\"w-txt2\">원활한 Sillock 서비스 이용을 위해 최초 1회 인증이 필요합니다.</p>\n                    </div>\n                    <div className=\"contents\">\n                        <div className=\"conlayout\">\n                            <form>\n                                <div className=\"layout\">\n                                    <TextField\n                                        id=\"w-input\"\n                                        label=\"ID\"\n                                        name=\"userId\"\n                                        type=\"text\"\n                                        variant=\"outlined\"\n                                        onChange={this.handleChange}\n                                        placeholder=\"아이디\"\n                                        required\n                                    />\n                                </div>\n                                <div className=\"layout2\">\n                                    <TextField\n                                        id=\"w-input\"\n                                        label=\"Password\"\n                                        name=\"password\"\n                                        type=\"password\"\n                                        variant=\"outlined\"\n                                        onChange={this.handleChange}\n                                        placeholder=\"비밀번호\"\n                                        required\n                                    />\n                                </div>\n                                <div className=\"layout2\">\n                                    <TextField\n                                        id=\"w-input\"\n                                        label=\"Email\"\n                                        name=\"email\"\n                                        type=\"email\"\n                                        variant=\"outlined\"\n                                        onChange={this.handleChange}\n                                        placeholder=\"이메일\"\n                                        required\n                                    />\n                                </div>\n                            </form>\n                        </div>\n                        <div className=\"stepButton\">\n                            <form>\n                                <Button id=\"subbtn\" variant=\"contained\" onClick={(e) => { this.onClickBtn() }}>인증코드 받기</Button>\n                            </form>\n                            {/*-- 서버에서 온 값 : \"{this.state.message}\"*/}\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n}\nexport default IdentityVerification;","D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Wallet\\UploadWallet.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Certificate\\CareerInstitution.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Certificate\\certificateMain.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Certificate\\CareerChoice.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Certificate\\CareerRequest.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Certificate\\careerRegistration.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Certificate\\myCombination.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Certificate\\MyTypeForm.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Certificate\\announcement.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Certificate\\MyIssueForm.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Certificate\\MyChoice.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Certificate\\MyPrintForm.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Certificate\\certificateResult2.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Certificate\\certificateResult.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\User\\Certificate\\announcement2.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\Institute\\Issuer\\issureRegister.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\Institute\\Verifier\\dashboard.js",[],"D:\\Users\\qkrdm\\Desktop\\sillock\\Frontend-edit\\Sillock-Front-End-Refactoring\\src\\Components\\MiniNav.js",["203"],"import React, { Component } from 'react';\r\nimport {Nav,Navbar,Form,Dropdown,ButtonGroup,DropdownButton} from 'react-bootstrap';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nclass MiniNav extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n       \r\n    }\r\n    goBack = () => {\r\n        this.props.history.goBack();\r\n    }\r\n    go = () => {\r\n        this.props.history.go(1);\r\n    }\r\n    render(){\r\n        return(\r\n            <Navbar bg=\"light\" variant=\"light\" className=\"pt-0 pb-0\">\r\n            <Navbar.Brand onClick={(e) => { this.goBack() }} ><i className=\"fas fa-chevron-left color-blue\"></i></Navbar.Brand>\r\n            <Navbar.Brand onClick={(e) => { this.go() }}><i className=\"fas fa-chevron-right\"></i></Navbar.Brand>\r\n            <Nav className=\"mr-auto \">\r\n            {/* <Nav.Link href=\"/\">홈</Nav.Link>\r\n            <Nav.Link href=\"/user/profile/mysillock\">내 지갑</Nav.Link> */}\r\n            </Nav>\r\n            <Form inline>\r\n            <Nav.Link href=\"/user/profile/mysillock\" style={{ textDecoration: 'none', color: 'black'}}><i className=\"fas fa-user-circle\" variant=\"Secondary\"></i></Nav.Link>\r\n             <>\r\n                <DropdownButton\r\n                    as={ButtonGroup}\r\n                    key='left'\r\n                    id={`dropdown-button-drop-left`}\r\n                    drop='left'\r\n                    variant=\"light\"\r\n                >\r\n                    <Dropdown.Item eventKey=\"1\" href=\"/\">홈</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"2\" href=\"/home\">SILLOCK 소개</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"3\" href=\"/user/profile/mysillock\">내 지갑</Dropdown.Item>\r\n                    <Dropdown.Divider />\r\n                    <Dropdown.Item eventKey=\"4\">로그아웃</Dropdown.Item>\r\n                </DropdownButton>\r\n        </>\r\n            </Form>\r\n        </Navbar>\r\n        )\r\n    }\r\n}\r\n// export withRouter MiniNav;\r\nexport default withRouter(MiniNav);",{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","severity":1,"message":"209","line":14,"column":8,"nodeType":"210","messageId":"211","endLine":14,"endColumn":16},{"ruleId":"212","severity":1,"message":"213","line":75,"column":28,"nodeType":"214","messageId":"215","endLine":75,"endColumn":48},{"ruleId":"216","severity":1,"message":"217","line":205,"column":115,"nodeType":"218","endLine":205,"endColumn":131},{"ruleId":"208","severity":1,"message":"219","line":47,"column":29,"nodeType":"210","messageId":"211","endLine":47,"endColumn":37},{"ruleId":"208","severity":1,"message":"220","line":11,"column":10,"nodeType":"210","messageId":"211","endLine":11,"endColumn":13},{"ruleId":"208","severity":1,"message":"221","line":11,"column":15,"nodeType":"210","messageId":"211","endLine":11,"endColumn":21},{"ruleId":"208","severity":1,"message":"222","line":11,"column":23,"nodeType":"210","messageId":"211","endLine":11,"endColumn":27},{"ruleId":"223","severity":1,"message":"224","line":66,"column":19,"nodeType":"225","messageId":"226","endLine":66,"endColumn":73},{"ruleId":"227","severity":1,"message":"228","line":7,"column":5,"nodeType":"229","messageId":"230","endLine":10,"endColumn":6},"no-native-reassign",["231"],"no-negated-in-lhs",["232"],"no-unused-vars","'phoneimg' is defined but never used.","Identifier","unusedVar","no-self-assign","'window.location.href' is assigned to itself.","MemberExpression","selfAssignment","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'numPages' is assigned a value but never used.","'Nav' is defined but never used.","'Navbar' is defined but never used.","'Form' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]